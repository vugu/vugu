// Code generated by vugu via vugugen DO NOT EDIT.
// Please regenerate instead of editing or add additional code in a separate file.

package main

import "fmt"
import "reflect"
import "github.com/vugu/vjson"
import "github.com/vugu/vugu"
import js "github.com/vugu/vugu/js"
import "log"

func (c *Root) Build(vgin *vugu.BuildIn) (vgout *vugu.BuildOut) {

	vgout = &vugu.BuildOut{}

	var vgiterkey interface{}
	_ = vgiterkey
	var vgn *vugu.VGNode
	vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "", Data: "div", Attr: []vugu.VGAttribute{{Namespace: "", Key: "id", Val: "container"}}}
	vgout.Out = append(vgout.Out, vgn)	// root for output
	{
		vgparent := vgn
		_ = vgparent
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    "}
		vgparent.AppendChild(vgn)
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "svg", Data: "svg", Attr: []vugu.VGAttribute{{Namespace: "", Key: "id", Val: "icon"}, vugu.VGAttribute{Namespace: "", Key: "xmlns", Val: "http://www.w3.org/2000/svg"}, vugu.VGAttribute{Namespace: "", Key: "width", Val: "24"}, vugu.VGAttribute{Namespace: "", Key: "height", Val: "24"}, vugu.VGAttribute{Namespace: "", Key: "viewBox", Val: "0 0 24 24"}, vugu.VGAttribute{Namespace: "", Key: "fill", Val: "none"}, vugu.VGAttribute{Namespace: "", Key: "stroke", Val: "currentColor"}, vugu.VGAttribute{Namespace: "", Key: "stroke-width", Val: "2"}, vugu.VGAttribute{Namespace: "", Key: "stroke-linecap", Val: "round"}, vugu.VGAttribute{Namespace: "", Key: "stroke-linejoin", Val: "round"}}}
		vgparent.AppendChild(vgn)
		vgn.SetInnerHTML(vugu.HTML("\n        \x3Cpolyline points=\"20 6 9 17 4 12\"\x3E\x3C/polyline\x3E\n    "))
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    "}
		vgparent.AppendChild(vgn)
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "svg", Data: "svg", Attr: []vugu.VGAttribute{{Namespace: "", Key: "id", Val: "external"}, vugu.VGAttribute{Namespace: "", Key: "width", Val: "24"}, vugu.VGAttribute{Namespace: "", Key: "height", Val: "24"}, vugu.VGAttribute{Namespace: "", Key: "fill", Val: "none"}, vugu.VGAttribute{Namespace: "", Key: "stroke", Val: "currentColor"}, vugu.VGAttribute{Namespace: "", Key: "stroke-width", Val: "2"}, vugu.VGAttribute{Namespace: "", Key: "stroke-linecap", Val: "round"}, vugu.VGAttribute{Namespace: "", Key: "stroke-linejoin", Val: "round"}}}
		vgparent.AppendChild(vgn)
		{
			vgparent := vgn
			_ = vgparent
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        "}
			vgparent.AppendChild(vgn)
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " THIS ICON WILL NOT SHOW IN CHROME! But there will be an error message if this works ... "}
			vgparent.AppendChild(vgn)
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        "}
			vgparent.AppendChild(vgn)
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(3), Namespace: "svg", Data: "use", Attr: []vugu.VGAttribute{{Namespace: "xlink", Key: "xlink:href", Val: "https://unpkg.com/feather-icons/dist/feather-sprite.svg#circle"}}}
			vgparent.AppendChild(vgn)
			vgn.SetInnerHTML(vugu.HTML(""))
			vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    "}
			vgparent.AppendChild(vgn)
		}
		vgn = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n"}
		vgparent.AppendChild(vgn)
	}
	return vgout
}

// 'fix' unused imports
var _ fmt.Stringer
var _ reflect.Type
var _ vjson.RawMessage
var _ js.Value
var _ log.Logger
