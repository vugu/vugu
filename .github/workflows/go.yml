name: Go tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.16.12', '1.17.6', '1.21.3' ]
    env:
      GO111MODULE: "on"
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: before_install from Travis
      run: go get golang.org/x/tools/cmd/goimports && go install golang.org/x/tools/cmd/goimports
    - run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    - run: go env -w GOFLAGS="-buildvcs=false"
    - name: Execute golang-ci
      run: golangci-lint run
    - run: cd wasm-test-suite/docker && ./make-docker.sh
    - run: docker run -d -t -p 9222:9222 -p 8846:8846 --name wasm-test-suite vugu/wasm-test-suite:latest
    - run: wget -O /tmp/tinygo.deb https://github.com/tinygo-org/tinygo/releases/download/v0.30.0/tinygo_0.30.0_amd64.deb ; sudo dpkg -i /tmp/tinygo.deb

    - name: Main script
      run: go install ./cmd/vugugen
    - run: go test .
    - run: go test ./devutil
    - run: go test ./distutil
    - run: go test ./domrender
    - run: go test ./gen
    - run: go test ./js
    - run: go test ./staticrender
    - run: go test ./simplehttp
    - run: go test ./vgform
    - run: go test -timeout=30m ./wasm-test-suite
